((("clojure.test/*testing-contexts*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("clojure.test/*testing-vars*" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("list" .
   [1 0 0 0])
  ("foo" .
   [3 0 0])
  ("var-set" .
   [2 0 0 0 0 0 0])
  ("*foo*" .
   [5 0 0 0 0])
  (":dynamic" .
   [2 0 0 0 0 0 0 0])
  ("declare" .
   [1 0 0 0 0 0 0])
  ("ns" .
   [2 0])
  ("contains" .
   [2 0 0 0 0 1 0 0])
  (":body" .
   [2 0 0 0 0])
  ("first" .
   [2 0 0 0 0])
  ("->" .
   [3 0])
  ("check-xml-text" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("t" .
   [1])
  ("tracking-data" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0])
  ("in?" .
   [1 0 0])
  ("http.async.client.request/prepare-request" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("http.async.client.request" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("http.async.client" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("function" .
   [0 0 0 1 0 0 0 0])
  ("Array" .
   [0 0 0 1 0])
  ("hotel" .
   [1 0 0 0 0])
  ("location-one" .
   [0 0 0 0 0 0 0 0 1 1 0 0])
  ("println" .
   [1 0 0 0 0 0 0])
  ("let" .
   [3 0 0])
  ("hotel-one" .
   [1 0 0 0 0 0 0 0 0])
  ("sl-core/shutdown!" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("config/solr-core-name" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("sl-core/with-core" .
   [0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("sl-core/connect!" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("sl-core" .
   [0 0 0 0 0 2 0])
  ("helper" .
   [1 0 0 0 0 0])
  (":as" .
   [2 0 0])
  ("clojure.test" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("=>" .
   [2 0])
  ("fact" .
   [2 0 0 0])
  ("global-set-key" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("locations" .
   [1 0 0 0 0 0 0 0 0])
  ("tmp_file" .
   [0 0 1 1 1 0 0 0])
  ("unsorted_locations" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("num_locations" .
   [0 0 0 4 0 0 0 0 0 0 0 0 0])
  ("done" .
   [1 0 0 0])
  ("shift" .
   [1 0 0 0 0])
  ("echo" .
   [4 0 0 0])
  ("if" .
   [1 0])
  ("then" .
   [1 0 0 0])
  ("base_url" .
   [1 0 1 0 1 0 0 0])
  ("fi" .
   [1 0])
  ("str" .
   [1 0 0])
  ("clojure.string" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("string" .
   [1 0 0 0 0 0])
  ("header-template" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("string/join" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("map" .
   [1 0 0])
  ("rate-xml" .
   [0 0 0 0 0 0 0 1])
  ("hotel-ids" .
   [1 0 0 0 0 0 0 0 0])
  ("footer-template" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("every-checker" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("$sp01" .
   [0 0 0 1 0])
  ("not" .
   [2 0 0])
  ("atom" .
   [1 0 0 0])
  ("r" .
   [1])
  ("jetty-server" .
   [2 0 0 2 0 0 0 0 0 0 0 0])
  (".isStopped" .
   [0 0 0 0 0 1 0 0 0 0])
  ("server/serve" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("core/full-service" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0])
  (":open-browser?" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0])
  (":join?" .
   [1 0 0 0 0 0])
  ("defn" .
   [3 0 0 0])
  ("ring-test-server-port-1" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("server/server-port" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0])
  ("reset!" .
   [1 0 0 0 0 0])
  (":stacktraces?" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0])
  ("require" .
   [4 0 0 0 0 0 0])
  ("clojure.repl" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("valid-rate?" .
   [1 0 0 0 0 0 0 0 0 0 0])
  (":nightly_rate" .
   [0 0 0 0 1 1 1 0 0 0 0 0 0])
  ("avg-nightly-rate-before-tax" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("avg-nightly-taxes-and-fees" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("pos?" .
   [1 0 0 0])
  ("complement" .
   [1 0 0 0 0 0 0 0 0 0])
  ("neg?" .
   [1 0 0 0])
  ("roughly" .
   [2 0 0 0 0 0 0])
  ("139.0" .
   [1 0 0 0 0])
  ("17.45" .
   [1 0 0 0 0])
  ("just" .
   [1 0 0 0])
  ("valid-partner-rate?" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("with-test-db-binding" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("db/restrict" .
   [0 0 0 0 0 0 1 0 0 0 0])
  (":foo" .
   [1 0 0 0])
  (":foos" .
   [3 0 0 0 0])
  ("unique?" .
   [0 0 0 0 1 0 1])
  ("count" .
   [1 0 0 0 0])
  ("d/q" .
   [1 0 0])
  ("tutorial-client" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("places" .
   [1 0 0 0 0 0])
  ("defn-" .
   [1 0 0 0 0])
  ("path" .
   [3 0 0 0])
  ("round" .
   [1 0 0 0 0])
  ("dataflow" .
   [0 0 0 0 1 0 0 0])
  ("update-in" .
   [0 0 0 0 0 0 1 0 0])
  (":app-model" .
   [1 0 0 0 0 0 0 0 0 0])
  ("fnil" .
   [1 0 0 0])
  (":value" .
   [1 0 0 0 0 0])
  (":main" .
   [1 0 0 0 0])
  (":average-count" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("round-number-post" .
   [0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("tutorial-client.start" .
   [0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("tutorial-client.post-processing" .
   [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0])))
